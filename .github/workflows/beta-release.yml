name: Beta Release

on:
  push:
    branches:
      - develop
      - beta
  workflow_dispatch:
    inputs:
      beta_version:
        description: 'Beta version number (e.g., 1, 2, 3)'
        required: true
        default: '1'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  version:
    name: Generate Beta Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: version
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-beta.*//')
          
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            BETA_NUM=${{ github.event.inputs.beta_version }}
          else
            # Auto-increment beta version
            BETA_NUM=$(date +%Y%m%d%H%M)
          fi
          
          NEW_VERSION="${BASE_VERSION}-beta.${BETA_NUM}"
          TAG="v${NEW_VERSION}"
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          
          echo "Generated version: $NEW_VERSION"
          echo "Generated tag: $TAG"

  trigger-release:
    name: Trigger Release Workflow
    needs: version
    runs-on: ubuntu-latest

    steps:
      - name: Trigger release workflow
        run: |
          echo "Version: ${{ needs.version.outputs.version }}"
          echo "Tag: ${{ needs.version.outputs.tag }}"
          echo "Release workflow will be triggered by the tag push"

  update-version:
    name: Update Package Version
    needs: [version, trigger-release]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Update package.json versions
        run: |
          # Update root package.json
          npm version ${{ needs.version.outputs.version }} --no-git-tag-version
          
          # Update desktop app package.json
          cd apps/desktop
          npm version ${{ needs.version.outputs.version }} --no-git-tag-version
          cd ../..

      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json apps/desktop/package.json
          git commit -m "chore: bump version to ${{ needs.version.outputs.version }}" || exit 0

      - name: Create and push tag
        run: |
          git tag ${{ needs.version.outputs.tag }}
          git push origin ${{ needs.version.outputs.tag }}
          git push origin HEAD:${{ github.ref_name }}

  notify:
    name: Notify Release
    needs: [version, trigger-release, update-version]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify success
        if: needs.trigger-release.result == 'success'
        run: |
          echo "‚úÖ Beta release ${{ needs.version.outputs.version }} initiated successfully!"
          echo "üîó Release will be available at: https://github.com/${{ github.repository }}/releases/tag/${{ needs.version.outputs.tag }}"

      - name: Notify failure
        if: needs.trigger-release.result == 'failure'
        run: |
          echo "‚ùå Beta release ${{ needs.version.outputs.version }} failed!"
          exit 1
